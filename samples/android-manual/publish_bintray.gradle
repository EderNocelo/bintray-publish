/*
 * publish to bintray
 */
Properties properties = new Properties()
File localPropertiesFile = project.file("local.properties")
if (!localPropertiesFile.exists()) localPropertiesFile = project.file("../local.properties")
if (localPropertiesFile.exists()) properties.load(localPropertiesFile.newDataInputStream())
if (properties.getProperty("bintray.user") != null && properties.getProperty("bintray.apiKey") != null) {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    def groupName = 'com.github.panpf.bintraypublishsampleandroidmanual'
    def artifactName = 'bintraypublishsampleandroidmanual'
    def versionName = '1.0.0-alpha01'

    group = groupName

    afterEvaluate {
        task sourcesJar(type: Jar) {
            from android.sourceSets.main.java.srcDirs
            archiveClassifier = 'sources'
        }

        task javadoc(type: Javadoc) {
            source = android.sourceSets.main.java.srcDirs
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            archiveClassifier = 'javadoc'
            from javadoc.destinationDir
        }

        publishing {
            publications {
                // Creates a Maven publication called "MyPublication".
                MyPublication(MavenPublication) {
                    // Applies the component for the release build variant.
                    from components.release

                    // You can then customize attributes of the publication as shown below.
                    groupId = groupName
                    artifactId = artifactName
                    version = versionName

                    artifact sourcesJar
                    artifact javadocJar
                }
            }
        }

        bintray {
            user = properties.getProperty("bintray.user")
            key = properties.getProperty("bintray.apiKey")

            publications = ['MyPublication']
            publish = true
            dryRun = project.hasProperty("dryRun") ? Boolean.parseBoolean(project.getProperty("dryRun")) : true

            pkg {
                userOrg = properties.getProperty("bintray.userOrg")
                repo = 'maven'
                name = artifactName
                desc = 'Bintray aar publishing example'
                websiteUrl = 'http://github.com/panpf/bintraypublishsampleandroidmanual'
                vcsUrl = 'http://github.com/panpf/bintraypublishsampleandroidmanual.git'
                issueTrackerUrl = 'http://github.com/panpf/bintraypublishsampleandroidmanual/issues'
                licenses = ['Apache-2.0']
                publicDownloadNumbers = true
                version {
                    name = versionName
                }
            }
        }
    }
}